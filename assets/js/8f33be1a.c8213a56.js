/*! For license information please see 8f33be1a.c8213a56.js.LICENSE.txt */
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9078],{3716:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>g,contentTitle:()=>p,default:()=>u,frontMatter:()=>h,metadata:()=>n,toc:()=>m});const n=JSON.parse('{"id":"custom-providers","title":"Configuring API Providers","description":"Configure Forge to work with your preferred AI provider and understand provider priority.","source":"@site/docs/custom-providers.mdx","sourceDirName":".","slug":"/custom-providers","permalink":"/docs/custom-providers","draft":false,"unlisted":false,"editUrl":"https://github.com/Forge Code/antinomyhq.github.io/tree/main/docs/custom-providers.mdx","tags":[],"version":"current","lastUpdatedAt":1750885099000,"sidebarPosition":3,"frontMatter":{"title":"Configuring API Providers","sidebar_position":3,"description":"Configure Forge to work with your preferred AI provider and understand provider priority.","sidebar_label":"API Providers"},"sidebar":"docs","previous":{"title":"Quickstart","permalink":"/docs/quickstart"},"next":{"title":"Built-in Commands","permalink":"/docs/commands"}}');var o=i(4848),s=i(8453),l=i(2786),t=i(9498),d=i(964);const a=(0,i(4722).A)("Layers",[["path",{d:"m12.83 2.18a2 2 0 0 0-1.66 0L2.6 6.08a1 1 0 0 0 0 1.83l8.58 3.91a2 2 0 0 0 1.66 0l8.58-3.9a1 1 0 0 0 0-1.83Z",key:"8b97xw"}],["path",{d:"m22 17.65-9.17 4.16a2 2 0 0 1-1.66 0L2 17.65",key:"dd6zsq"}],["path",{d:"m22 12.65-9.17 4.16a2 2 0 0 1-1.66 0L2 12.65",key:"ep9fru"}]]);var c=i(5494);const h={title:"Configuring API Providers",sidebar_position:3,description:"Configure Forge to work with your preferred AI provider and understand provider priority.",sidebar_label:"API Providers"},p="Configuring API Providers",g={},m=[{value:"Supported AI Providers",id:"supported-ai-providers",level:2},{value:"Provider Overview",id:"provider-overview",level:3},{value:"Environment Configuration",id:"environment-configuration",level:2},{value:"Provider Priority &amp; Environment Merging",id:"provider-priority--environment-merging",level:2},{value:"Priority Order",id:"priority-order",level:3},{value:"Environment File Merging",id:"environment-file-merging",level:3},{value:"Next Steps",id:"next-steps",level:2}];function x(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"configuring-api-providers",children:"Configuring API Providers"})}),"\n",(0,o.jsx)(r.p,{children:"Configure Forge to work with your preferred AI provider. This guide covers provider setup, priority handling, environment file merging, and provider-specific features."}),"\n",(0,o.jsx)(r.h2,{id:"supported-ai-providers",children:"Supported AI Providers"}),"\n",(0,o.jsx)(r.p,{children:"Forge supports multiple AI providers, each with unique capabilities and pricing models:"}),"\n",(0,o.jsx)(r.h3,{id:"provider-overview",children:"Provider Overview"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Forge Provider"})," (",(0,o.jsx)(r.code,{children:"FORGE_KEY"}),"): Forgecode's managed service with optimized models"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"OpenRouter"})," (",(0,o.jsx)(r.code,{children:"OPENROUTER_API_KEY"}),"): Access to 300+ models from multiple providers"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"OpenAI"})," (",(0,o.jsx)(r.code,{children:"OPENAI_API_KEY"}),"): Official OpenAI models (GPT-4, o3-mini, etc.)"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Anthropic"})," (",(0,o.jsx)(r.code,{children:"ANTHROPIC_API_KEY"}),"): Claude models (Claude 3.7 Sonnet, etc.)"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Google Vertex AI"}),": Google's enterprise AI platform with Claude and Gemini models"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Groq"}),": Ultra-fast inference with optimized models like DeepSeek R1"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Amazon Bedrock"}),": AWS managed AI service with multiple model providers"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"OpenAI-Compatible Providers"}),": Any provider following OpenAI API format"]}),"\n"]}),"\n",(0,o.jsx)(r.h2,{id:"environment-configuration",children:"Environment Configuration"}),"\n",(0,o.jsxs)(l.Ay,{children:[(0,o.jsxs)(l.pn,{title:"Create Environment File",children:[(0,o.jsxs)(r.p,{children:["Create a ",(0,o.jsx)(r.code,{children:".env"})," file to store your API credentials. You can place this file in multiple locations:"]}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"# In your home directory (global configuration)\ntouch ~/.env\n\n# In your project directory (project-specific)\ntouch .env\n\n# In any parent directory of your project\ntouch ../../../.env\n"})}),(0,o.jsx)("div",{className:"mt-2 text-[15px] text-gray-600",children:(0,o.jsx)(r.p,{children:"Forge will automatically detect and merge environment files from multiple locations."})})]}),(0,o.jsxs)(l.pn,{title:"Add API Credentials",children:[(0,o.jsxs)(r.p,{children:["Add your preferred provider's API key to the ",(0,o.jsx)(r.code,{children:".env"})," file:"]}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"# Choose one or multiple providers\n\n# Forge Provider (Forgecode's managed service)\nFORGE_KEY=your_forge_api_key_here\n\n# OpenRouter (recommended for model variety)\nOPENROUTER_API_KEY=your_openrouter_key_here\n\n# Official OpenAI\nOPENAI_API_KEY=your_openai_key_here\n\n# Official Anthropic\nANTHROPIC_API_KEY=your_anthropic_key_here\n\n# Google Vertex AI\nPROJECT_ID=your_project_id\nLOCATION=your_location\nOPENAI_API_KEY=your_vertex_ai_key\nOPENAI_URL=https://${LOCATION}-aiplatform.googleapis.com/v1beta1/projects/${PROJECT_ID}/locations/${LOCATION}/endpoints/openapi\n\n# Groq\nOPENAI_API_KEY=your_groq_api_key\nOPENAI_URL=https://api.groq.com/openai/v1\n\n# Amazon Bedrock (requires Bedrock Access Gateway)\nOPENAI_API_KEY=your_bedrock_gateway_api_key\nOPENAI_URL=your_bedrock_gateway_base_url\n\n# OpenAI-Compatible Providers\nOPENAI_API_KEY=your_provider_api_key\nOPENAI_URL=your_provider_url\n"})}),(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"Where to get API keys:"})}),(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.a,{href:"https://app.forgecode.dev/app/",children:"Forge Provider"})," - Sign up for Antinomy account"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.a,{href:"https://openrouter.ai/",children:"OpenRouter"})," - Aggregated access to multiple models"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.a,{href:"https://platform.openai.com/",children:"OpenAI"})," - Official OpenAI platform"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.a,{href:"https://console.anthropic.com/",children:"Anthropic"})," - Official Anthropic console"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.a,{href:"https://cloud.google.com/vertex-ai",children:"Google Vertex AI"})," - Google Cloud AI platform"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.a,{href:"https://console.groq.com/",children:"Groq"})," - Ultra-fast inference platform"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.a,{href:"https://aws.amazon.com/bedrock/",children:"Amazon Bedrock"})," - AWS managed AI service"]}),"\n"]}),(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"Example setup with Forge Provider (recommended):"})}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"# ~/.env\nFORGE_KEY=your_forge_api_key_here\n"})}),(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"Example setup with OpenRouter:"})}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"# ~/.env\nOPENROUTER_API_KEY=your_openrouter_key_here\n"})}),(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"Example setup with Groq:"})}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"# ~/.env\nOPENAI_API_KEY=your_groq_api_key\nOPENAI_URL=https://api.groq.com/openai/v1\n"})}),(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"Example setup with Amazon Bedrock:"})}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"# ~/.env\nOPENAI_API_KEY=your_bedrock_gateway_api_key\nOPENAI_URL=your_bedrock_gateway_base_url\n"})}),(0,o.jsx)("div",{className:"mt-2 text-[15px] text-gray-600",children:(0,o.jsxs)(r.p,{children:[(0,o.jsx)("strong",{children:"Note:"})," Amazon Bedrock requires setting up the"," ","\n",(0,o.jsx)("a",{href:"https://github.com/aws-samples/bedrock-access-gateway",children:"Bedrock Access Gateway"})," first."]})})]}),(0,o.jsxs)(l.pn,{title:"Verify Configuration",children:[(0,o.jsx)(r.p,{children:"Test your provider configuration by running Forge:"}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"forge --version\n"})}),(0,o.jsx)(r.p,{children:"Forge will automatically detect and use the highest priority provider available."})]})]}),"\n",(0,o.jsx)(r.h2,{id:"provider-priority--environment-merging",children:"Provider Priority & Environment Merging"}),"\n",(0,o.jsx)(r.h3,{id:"priority-order",children:"Priority Order"}),"\n",(0,o.jsx)(r.p,{children:"When multiple API keys are configured, Forge uses this priority order:"}),"\n",(0,o.jsxs)(r.ol,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"FORGE_KEY"})})," - Highest priority (Forgecode's provider)"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"OPENROUTER_API_KEY"})})," - Second priority (multiple models)"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"OPENAI_API_KEY"})})," - Third priority (official OpenAI)"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"ANTHROPIC_API_KEY"})})," - Lowest priority (official Anthropic)"]}),"\n"]}),"\n",(0,o.jsx)(r.h3,{id:"environment-file-merging",children:"Environment File Merging"}),"\n",(0,o.jsxs)(r.p,{children:["Forge searches for ",(0,o.jsx)(r.code,{children:".env"})," files in this order and merges them:"]}),"\n",(0,o.jsxs)(r.ol,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Current working directory"})," (",(0,o.jsx)(r.code,{children:".env"}),")"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Parent directories"})," (recursively up to root)"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Home directory"})," (",(0,o.jsx)(r.code,{children:"~/.env"}),")"]}),"\n"]}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"Merge behavior:"})}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"Variables in closer directories override those in parent directories"}),"\n",(0,o.jsxs)(r.li,{children:["Project-level ",(0,o.jsx)(r.code,{children:".env"})," takes precedence over global ",(0,o.jsx)(r.code,{children:"~/.env"})]}),"\n",(0,o.jsx)(r.li,{children:"First found variable wins (no overriding within same file)"}),"\n"]}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"Example scenario:"})}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"# ~/.env (global)\nOPENAI_API_KEY=global_openai_key\nANTHROPIC_API_KEY=global_anthropic_key\n\n# /project/.env (project-specific)\nFORGE_KEY=project_forge_key\nOPENAI_API_KEY=project_openai_key\n\n# Result: Forge uses project_forge_key (highest priority)\n# OPENAI_API_KEY from project overrides global\n# ANTHROPIC_API_KEY from global is still available\n"})}),"\n",(0,o.jsx)(r.h2,{id:"next-steps",children:"Next Steps"}),"\n","\n",(0,o.jsx)(c.A,{items:[{logo:(0,o.jsx)(t.A,{size:28,style:{verticalAlign:"middle",marginRight:6}}),title:"Essential Commands",subtitle:"Learn core commands for productive development workflows.",link:"/docs/commands"},{logo:(0,o.jsx)(d.A,{size:28,style:{verticalAlign:"middle",marginRight:6}}),title:"Custom Commands",subtitle:"Create your own commands and automate repetitive tasks.",link:"/docs/custom-commands"},{logo:(0,o.jsx)(a,{size:28,style:{verticalAlign:"middle",marginRight:6}}),title:"Operating Agents",subtitle:"Understand different modes and agent capabilities.",link:"/docs/operating-agents"}]}),"\n",(0,o.jsx)(r.hr,{}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"Provider configuration complete!"})," Forge will automatically use your configured provider based on the priority order and environment setup."]})]})}function u(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(x,{...e})}):x(e)}},2786:(e,r,i)=>{i.d(r,{Ay:()=>l,pn:()=>s});var n=i(6540),o=i(4848);const s=e=>{let{title:r,children:i,number:n}=e;return(0,o.jsxs)("div",{className:"flex gap-4 mb-8",children:[(0,o.jsx)("div",{className:"flex-shrink-0",children:(0,o.jsx)("div",{className:"h-7 w-7 rounded-full bg-gray-100 border border-gray-300 flex items-center justify-center text-gray-700 font-semibold text-base",children:n})}),(0,o.jsxs)("div",{className:"flex-1 min-w-0",children:[(0,o.jsx)("h3",{className:"font-semibold text-lg leading-6 text-gray-900 mb-1",children:r}),(0,o.jsx)("div",{className:"text-base text-gray-800",children:i})]})]})},l=e=>{let{children:r}=e;const i=n.Children.toArray(r).filter(Boolean).map(((e,r)=>n.isValidElement(e)?n.cloneElement(e,{number:r+1}):e));return(0,o.jsx)("div",{children:i})}},5494:(e,r,i)=>{i.d(r,{A:()=>l});i(6540);var n=i(8774),o=i(4164),s=i(4848);const l=e=>{let{items:r,className:i}=e;return(0,s.jsx)("div",{className:(0,o.A)("grid grid-cols-1 md:grid-cols-3 gap-4 my-8",i),children:r.map(((e,r)=>(0,s.jsx)(n.A,{to:e.link,className:"flex flex-col overflow-hidden !text-black !no-underline h-full",children:(0,s.jsxs)("div",{className:"flex flex-col flex-1 p-6 gap-2 min-h-44 border border-dashed border-tailCall-border-light-600 bg-transparent hover:border-tailCall-border-dark-100 transition-colors",children:[(0,s.jsx)("div",{className:"mb-2 flex items-center text-tailCall-light-700",children:e.logo}),(0,s.jsxs)("div",{className:"flex flex-col flex-1 gap-1",children:[(0,s.jsx)("span",{className:"text-title-small font-bold line-clamp-2",children:e.title}),(0,s.jsx)("span",{className:"text-content-small text-tailCall-light-800",children:e.subtitle})]})]})},r)))})}},964:(e,r,i)=>{i.d(r,{A:()=>n});const n=(0,i(4722).A)("Settings",[["path",{d:"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z",key:"1qme2f"}],["circle",{cx:"12",cy:"12",r:"3",key:"1v7zrd"}]])},8453:(e,r,i)=>{i.d(r,{R:()=>l,x:()=>t});var n=i(6540);const o={},s=n.createContext(o);function l(e){const r=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);