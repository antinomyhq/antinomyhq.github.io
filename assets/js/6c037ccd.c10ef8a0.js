"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[646],{257:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"using-forge","title":"Using Forge","description":"Learn how to use Forge effectively, from initial setup to advanced shell features.","source":"@site/docs/using-forge.mdx","sourceDirName":".","slug":"/using-forge","permalink":"/docs/using-forge","draft":false,"unlisted":false,"editUrl":"https://github.com/antinomyhq/antinomyhq.github.io/tree/main/docs/using-forge.mdx","tags":[],"version":"current","lastUpdatedAt":1743502566000,"sidebarPosition":4,"frontMatter":{"title":"Using Forge","sidebar_position":4,"description":"Learn how to use Forge effectively, from initial setup to advanced shell features.","sidebar_label":"Using Forge"},"sidebar":"docs","previous":{"title":"Installation","permalink":"/docs/installation"},"next":{"title":"Built-in Commands","permalink":"/docs/commands"}}');var s=i(4848),o=i(8453);const t={title:"Using Forge",sidebar_position:4,description:"Learn how to use Forge effectively, from initial setup to advanced shell features.",sidebar_label:"Using Forge"},l="Using Forge",c={},d=[{value:"Setting Up API Credentials",id:"setting-up-api-credentials",level:2},{value:"Supported AI Providers",id:"supported-ai-providers",level:2},{value:"Starting Forge",id:"starting-forge",level:2},{value:"Basic Workflow",id:"basic-workflow",level:2},{value:"Shell Integration Features",id:"shell-integration-features",level:2},{value:"Intelligent Autocomplete",id:"intelligent-autocomplete",level:3},{value:"File and Path Completion",id:"file-and-path-completion",level:4},{value:"Command History Navigation",id:"command-history-navigation",level:4},{value:"WYSIWYG Shell Experience",id:"wysiwyg-shell-experience",level:3},{value:"Command Control",id:"command-control",level:3},{value:"Using Commands",id:"using-commands",level:2},{value:"Effective Usage Patterns",id:"effective-usage-patterns",level:2},{value:"Clear Communication",id:"clear-communication",level:3},{value:"Project Context",id:"project-context",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Next Steps",id:"next-steps",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"using-forge",children:"Using Forge"})}),"\n",(0,s.jsx)(n.p,{children:"This guide covers everything you need to know about using Forge effectively, from initial setup to making the most of its shell integration features."}),"\n",(0,s.jsx)(n.h2,{id:"setting-up-api-credentials",children:"Setting Up API Credentials"}),"\n",(0,s.jsxs)(n.p,{children:["After ",(0,s.jsx)(n.a,{href:"/docs/installation",children:"installing Forge"}),", you need to configure it to work with your preferred AI provider:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Create a ",(0,s.jsx)(n.code,{children:".env"})," file in your home directory:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"touch ~/.env\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["Open the ",(0,s.jsx)(n.code,{children:".env"})," file and add your API key. Here's an example using Open Router (recommended):"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Your API key for accessing AI models\nOPENROUTER_API_KEY=<Enter your Open Router Key>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You can get an API key at ",(0,s.jsx)(n.a,{href:"https://openrouter.ai/",children:"Open Router"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"supported-ai-providers",children:"Supported AI Providers"}),"\n",(0,s.jsx)(n.p,{children:"Forge automatically detects API keys from your environment variables in this priority order:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"FORGE_KEY"})," - Antinomy's provider (OpenAI-compatible)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"OPENROUTER_API_KEY"})," - Open Router provider (aggregates multiple models)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"OPENAI_API_KEY"})," - Official OpenAI provider"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ANTHROPIC_API_KEY"})," - Official Anthropic provider"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["To use a specific provider, set the corresponding variable in your ",(0,s.jsx)(n.code,{children:".env"})," file:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Examples of different provider configurations (use only one)\n\n# For Open Router (recommended, provides access to multiple models)\nOPENROUTER_API_KEY=your_openrouter_key_here\n\n# For official OpenAI\nOPENAI_API_KEY=your_openai_key_here\n\n# For official Anthropic\nANTHROPIC_API_KEY=your_anthropic_key_here\n\n# For Antinomy's provider\nFORGE_KEY=your_forge_key_here\n"})}),"\n",(0,s.jsx)(n.h2,{id:"starting-forge",children:"Starting Forge"}),"\n",(0,s.jsx)(n.p,{children:"Once you've set up your API credentials, start Forge by typing:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"forge\n"})}),"\n",(0,s.jsx)(n.p,{children:"This launches Forge in its default configuration with a prompt ready for your instructions."}),"\n",(0,s.jsx)(n.h2,{id:"basic-workflow",children:"Basic Workflow"}),"\n",(0,s.jsx)(n.p,{children:"Using Forge follows this simple pattern:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Start Forge"})," in your project directory"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Type your task"}),' in natural language (e.g., "Create a React component for a login form")']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Review the proposed changes"})," and output"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Continue the conversation"})," to refine, clarify, or extend the solution"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"shell-integration-features",children:"Shell Integration Features"}),"\n",(0,s.jsx)(n.p,{children:"Forge enhances your terminal experience with several powerful features:"}),"\n",(0,s.jsx)(n.h3,{id:"intelligent-autocomplete",children:"Intelligent Autocomplete"}),"\n",(0,s.jsx)(n.h4,{id:"file-and-path-completion",children:"File and Path Completion"}),"\n",(0,s.jsxs)(n.p,{children:["Type ",(0,s.jsx)(n.code,{children:"@"})," followed by a partial path and press Tab to get contextual path completion:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Type this and press Tab to complete file paths\n@src/com\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This will complete to matching paths like ",(0,s.jsx)(n.code,{children:"@src/components/"})," or ",(0,s.jsx)(n.code,{children:"@src/common/"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"command-history-navigation",children:"Command History Navigation"}),"\n",(0,s.jsx)(n.p,{children:"Access your command history efficiently:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Right Arrow"}),": Complete previously executed commands"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Up Arrow"}),": Navigate through command history"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ctrl+R"}),": Search through command history"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example of history search:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'(reverse-i-search)`git`: git commit -m "Fix login bug"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"wysiwyg-shell-experience",children:"WYSIWYG Shell Experience"}),"\n",(0,s.jsx)(n.p,{children:"Forge visualizes each executed command with colorful formatting, displaying command outputs just as if you were typing them directly in your terminal. This ensures clarity and enhances interaction, making commands and their results clearly visible."}),"\n",(0,s.jsx)(n.h3,{id:"command-control",children:"Command Control"}),"\n",(0,s.jsx)(n.p,{children:"Stay in control of your shell environment:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cancel operations"}),": Press ",(0,s.jsx)(n.code,{children:"Ctrl+C"})," to gracefully interrupt ongoing operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Exit Forge"}),": Press ",(0,s.jsx)(n.code,{children:"Ctrl+D"})," to exit the shell session"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"using-commands",children:"Using Commands"}),"\n",(0,s.jsxs)(n.p,{children:["Forge provides several built-in commands prefixed with a forward slash (",(0,s.jsx)(n.code,{children:"/"}),"):"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"/new"})}),": Start a new task (clears context)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"/act"})}),": Switch to ACT mode (implements changes)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"/plan"})}),": Switch to PLAN mode (plans but doesn't implement changes)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"/info"})}),": View environment summary"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"/models"})}),": List available AI models"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"/help"})}),": Display help information"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"/dump"})}),": Save conversation for debugging"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"/exit"})}),": Exit Forge"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"For example, to switch to planning mode:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"/plan\n"})}),"\n",(0,s.jsxs)(n.p,{children:["For a complete list of commands and their usage, see the ",(0,s.jsx)(n.a,{href:"/docs/commands",children:"Commands documentation"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"effective-usage-patterns",children:"Effective Usage Patterns"}),"\n",(0,s.jsx)(n.p,{children:"To get the most out of Forge, keep these patterns in mind:"}),"\n",(0,s.jsx)(n.h3,{id:"clear-communication",children:"Clear Communication"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Be specific"})," about what you want Forge to do"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Provide context"})," when asking for complex tasks"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Use references"})," to specific files or functions when relevant"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"project-context",children:"Project Context"}),"\n",(0,s.jsx)(n.p,{children:"Start Forge from your project's root directory to give it the full context of your project structure."}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.p,{children:"If you encounter issues:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Check your API key"})," in the ",(0,s.jsx)(n.code,{children:".env"})," file"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Verify internet connectivity"})," for API access"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Review logs"})," by running ",(0,s.jsx)(n.code,{children:"/info"})," to find log file locations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Use ",(0,s.jsx)(n.code,{children:"/dump"})]})," to save the conversation context for debugging"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsx)(n.p,{children:"Now that you're familiar with using Forge, you might want to explore:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"../operation-modes",children:"Operation Modes"}),": Learn more about ACT and PLAN modes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"../agent-configuration",children:"Agent Configuration"}),": Customize agent behavior"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"../custom-commands",children:"Custom Commands"}),": Create your own project-specific commands"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"../environment-configuration",children:"Environment Configuration"}),": Advanced configuration options"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var r=i(6540);const s={},o=r.createContext(s);function t(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);