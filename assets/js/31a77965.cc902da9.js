"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8748],{2786:(e,n,s)=>{s.d(n,{Ay:()=>l,pn:()=>r});var i=s(6540),t=s(4848);const r=({title:e,children:n,number:s})=>(0,t.jsxs)("div",{className:"flex gap-4 mb-8",children:[(0,t.jsx)("div",{className:"flex-shrink-0",children:(0,t.jsx)("div",{className:"h-7 w-7 rounded-full bg-gray-900 border border-gray-300 flex items-center justify-center text-white font-semibold text-base",children:s})}),(0,t.jsxs)("div",{className:"flex-1 min-w-0",children:[(0,t.jsx)("h3",{className:"font-semibold text-lg leading-6 text-gray-900 mb-1",children:e}),(0,t.jsx)("div",{className:"text-base text-gray-800",children:n})]})]}),l=({children:e})=>{const n=i.Children.toArray(e).filter(Boolean).map((e,n)=>i.isValidElement(e)?i.cloneElement(e,{number:n+1}):e);return(0,t.jsx)("div",{children:n})}},4041:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>h,contentTitle:()=>o,default:()=>g,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"zsh-support","title":"ZSH Support","description":"Keep your ZSH aliases and shell setup while getting AI assistance - no separate environment needed.","source":"@site/docs/zsh-support.mdx","sourceDirName":".","slug":"/zsh-support","permalink":"/docs/zsh-support","draft":false,"unlisted":false,"editUrl":"https://github.com/Forge Code/antinomyhq.github.io/tree/main/docs/zsh-support.mdx","tags":[],"version":"current","lastUpdatedAt":1759467590000,"sidebarPosition":6,"frontMatter":{"title":"ZSH Support","sidebar_position":6,"description":"Keep your ZSH aliases and shell setup while getting AI assistance - no separate environment needed.","sidebar_label":"ZSH Support"},"sidebar":"docs","previous":{"title":"Shell Commands","permalink":"/docs/shell-commands"},"next":{"title":"Auto-Complete","permalink":"/docs/auto-complete"}}');var t=s(4848),r=s(8453),l=s(2786);const a={title:"ZSH Support",sidebar_position:6,description:"Keep your ZSH aliases and shell setup while getting AI assistance - no separate environment needed.",sidebar_label:"ZSH Support"},o="ZSH Support: Keep Your Shell Aliases While Getting AI Help",h={},c=[{value:"What You Get",id:"what-you-get",level:2},{value:"Core Features (Work Immediately After Installation)",id:"core-features-work-immediately-after-installation",level:3},{value:"Advanced Features (Require fd and fzf)",id:"advanced-features-require-fd-and-fzf",level:3},{value:"Installation",id:"installation",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Prompt Execution",id:"basic-prompt-execution",level:3},{value:"Agent Selection",id:"agent-selection",level:3},{value:"Context Management",id:"context-management",level:3},{value:"File Tagging <em>(requires fd/fzf)</em>",id:"file-tagging-requires-fdfzf",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Command Not Found",id:"command-not-found",level:4},{value:"File Tagging Doesn&#39;t Work",id:"file-tagging-doesnt-work",level:4},{value:"Syntax Highlighting Problems",id:"syntax-highlighting-problems",level:4},{value:"No agent has subscribed to the event",id:"no-agent-has-subscribed-to-the-event",level:4}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"zsh-support-keep-your-shell-aliases-while-getting-ai-help",children:"ZSH Support: Keep Your Shell Aliases While Getting AI Help"})}),"\n",(0,t.jsxs)(n.p,{children:["Stop losing access to your carefully crafted ZSH aliases, custom functions, and shell tooling every time you need AI assistance. The ",(0,t.jsx)(n.code,{children:":"})," sentinel character lets you stay in your native shell while getting help from Forge."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"The Problem"}),": Forge's interactive mode creates a separate environment where your ZSH aliases, custom functions, and shell setup don't work. You're forced to choose between AI assistance or your productivity tools."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"The Solution"}),": Use ",(0,t.jsx)(n.code,{children:":"})," to send prompts to Forge while staying in your native ZSH session:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Your zsh plugins work normally\ngst\ngcam "fix: resolve memory leak"\n\n# But you can also get AI help instantly\n: analyze the memory usage patterns in @src/server.rs\n\n# Run your custom tools as part of your investigation\nps aux | grep server\nhtop -p $(pgrep server)\n\n# Continue with full context about the analysis\n: now optimize the memory allocations you identified in the server struct\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"The Result"}),": Maintain context across both AI tasks and your custom shell operations, without switching environments or losing your workflow."]}),"\n",(0,t.jsx)(n.h2,{id:"what-you-get",children:"What You Get"}),"\n",(0,t.jsx)(n.h3,{id:"core-features-work-immediately-after-installation",children:"Core Features (Work Immediately After Installation)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Native Shell Integration"}),": Use ",(0,t.jsx)(n.code,{children:":"})," to access Forge AI while preserving all your ZSH aliases, functions, PATH modifications, and custom tooling"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Intelligent Context Management"}),": Maintain conversation context across prompts with ",(0,t.jsx)(n.code,{children:":reset"})," control and agent targeting like ",(0,t.jsx)(n.code,{children:":sage"})," or ",(0,t.jsx)(n.code,{children:":muse"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Syntax Highlighting"}),": Color-coded prompts optimized for dark terminals (requires zsh-syntax-highlighting plugin)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"advanced-features-require-fd-and-fzf",children:"Advanced Features (Require fd and fzf)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fuzzy File Finding"}),": Quick file tagging with ",(0,t.jsx)(n.code,{children:"@filename<Tab>"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fuzzy Agent Selection"}),": Press Tab after ",(0,t.jsx)(n.code,{children:":"})," to get a searchable list of available agents"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"These features are optional but provide a significantly better experience. Installation instructions are in Step 1 below."}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsxs)(l.Ay,{children:[(0,t.jsxs)(l.pn,{title:"Install zsh-syntax-highlighting Plugin (Required)",children:[(0,t.jsxs)(n.p,{children:["The syntax highlighting feature requires the ",(0,t.jsx)(n.a,{href:"https://github.com/zsh-users/zsh-syntax-highlighting",children:"zsh-syntax-highlighting"})," plugin to be installed and loaded in your ZSH configuration."]}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Option 1: Package Manager (Recommended)"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# macOS\nbrew install zsh-syntax-highlighting\n\n# Ubuntu/Debian\nsudo apt install zsh-syntax-highlighting\n\n# Arch Linux\nsudo pacman -S zsh-syntax-highlighting\n\n# Fedora\nsudo dnf install zsh-syntax-highlighting\n"})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Option 2: Oh My Zsh"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Clone to Oh My Zsh plugins directory\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\n\n# Add to plugins in ~/.zshrc (must be last plugin)\nplugins=(... zsh-syntax-highlighting)\n"})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Option 3: Manual Installation"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Clone the repository\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git\n\n# Add to ~/.zshrc (must be at the end)\necho "source ${(q-)PWD}/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" >> ${ZDOTDIR:-$HOME}/.zshrc\n'})}),(0,t.jsx)(n.admonition,{title:"Important Loading Order",type:"warning",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"zsh-syntax-highlighting must be sourced LAST"})," in your ",(0,t.jsx)(n.code,{children:".zshrc"})," file, after all other plugins and the Forge integration. This ensures proper highlighting of Forge prompts."]})})]}),(0,t.jsxs)(l.pn,{title:"Install Optional File Finding Tools (Recommended)",children:[(0,t.jsx)(n.p,{children:"For fuzzy file finding and agent selection, install fd and fzf:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# macOS\nbrew install fd fzf\n\n# Ubuntu/Debian\nsudo apt install fd-find fzf\n\n# Arch Linux\nsudo pacman -S fd fzf\n"})}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Other platforms:"})," See our ",(0,t.jsx)(n.a,{href:"/docs/fd-fzf-installation",children:"ZSH Dependencies Installation Guide"})]}),(0,t.jsx)(n.admonition,{title:"Optional but Recommended",type:"tip",children:(0,t.jsx)(n.p,{children:"ZSH Support works without these tools, but you'll need to type full file paths instead of using fuzzy finding. You can install them later if you skip this step."})})]}),(0,t.jsxs)(l.pn,{title:"Install Forge",children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/docs/installation",children:"Install and set up Forge"})," following the main installation guide."]}),(0,t.jsxs)(n.p,{children:["Choose either global installation via ",(0,t.jsx)(n.code,{children:"npm"})," or ",(0,t.jsx)(n.code,{children:"npx"})," usage. Remember your choice for the next step."]})]}),(0,t.jsxs)(l.pn,{title:"Configure ZSH Integration",children:[(0,t.jsx)(n.p,{children:"Add Forge ZSH integration to your shell configuration:"}),(0,t.jsx)(n.p,{children:"If you installed Forge globally:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Add to ~/.zshrc\nexport FORGEBIN=forge\nsource <($FORGEBIN generate-zsh-prompt)\n"})}),(0,t.jsx)(n.p,{children:"If you're using npx:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Add to ~/.zshrc\nexport FORGEBIN="npx forgecode"\nsource <($FORGEBIN generate-zsh-prompt)\n'})}),(0,t.jsxs)(n.admonition,{title:"Critical Loading Order",type:"note",children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"The Forge source line must come BEFORE the zsh-syntax-highlighting source line"})," in your ",(0,t.jsx)(n.code,{children:".zshrc"})," file. The correct order is:"]}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"All other plugins"}),"\n",(0,t.jsxs)(n.li,{children:["Forge integration (",(0,t.jsx)(n.code,{children:"source <($FORGEBIN generate-zsh-prompt)"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"zsh-syntax-highlighting (last)"}),"\n"]})]}),(0,t.jsx)(n.p,{children:"Then reload your shell:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"source ~/.zshrc\n"})})]}),(0,t.jsxs)(l.pn,{title:"Verify Installation",children:[(0,t.jsx)(n.p,{children:"Test that everything works:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"# Basic prompt - should show syntax highlighting\n: hello world\n\n# Test file tagging (requires fd/fzf from Step 1)\n: help me with @README<Tab>\n"})}),(0,t.jsx)(n.p,{children:"You should see color-coded syntax highlighting and successful command execution."})]})]}),"\n",(0,t.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Basic prompt\n: hello, can you help me debug this shell script?\n\n# Agent-specific prompt\n:sage what are the performance implications of this database query?\n\n# Continue the conversation with context\n: what optimizations would you recommend?\n\n# Reset when switching to a different task\n:reset\n\n# Fuzzy agent selection (requires fd/fzf)\n:<Tab>\n\n# Fuzzy file finding (requires fd/fzf)\n: explain the config in @package<Tab>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.h3,{id:"basic-prompt-execution",children:"Basic Prompt Execution"}),"\n",(0,t.jsxs)(n.p,{children:["Send prompts to Forge using the ",(0,t.jsx)(n.code,{children:":"})," prefix:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:": explain this error message\n: refactor this function to be more readable\n: add error handling to the database connection\n"})}),"\n",(0,t.jsx)(n.p,{children:"The prompt goes to your last used agent, defaulting to the main Forge agent if this is your first interaction."}),"\n",(0,t.jsx)(n.h3,{id:"agent-selection",children:"Agent Selection"}),"\n",(0,t.jsx)(n.p,{children:"Target specific agents by including the agent name after the colon:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:":sage explain the algorithm complexity and performance characteristics\n:muse create a plan for implementing user authentication with OAuth\n:forge refactor this function to be more maintainable\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Agent Selection Rules:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"No agent specified"})," (",(0,t.jsx)(n.code,{children:":"}),") = uses the previous agent, or Forge if first interaction"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Agent specified"})," (",(0,t.jsx)(n.code,{children:":sage"}),") = switches to that agent and makes it the new default"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:":reset"})})," = clears conversation context but keeps the current agent selection"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example workflow:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# First interaction - goes to default Forge agent\n: help me debug this performance issue\n\n# Continues with same agent\n: what tools should I use to profile memory usage?\n\n# Switch to sage for analysis\n:sage analyze the complexity of this sorting algorithm\n\n# Continues with sage\n: what are the potential edge cases?\n\n# Clear context when switching tasks\n:reset\n:forge implement the user login validation function\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Press Tab after ",(0,t.jsx)(n.code,{children:":"})," for fuzzy agent selection ",(0,t.jsx)(n.em,{children:"(requires fd/fzf)"}),"."]}),"\n",(0,t.jsxs)(n.admonition,{title:"Agent Names",type:"tip",children:[(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"forge"})," - Main agent for coding, refactoring, debugging, and general development tasks"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"muse"})," - Planning and strategy for complex features"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"sage"})," - Questions and analysis without making code modifications"]}),"\n"]}),(0,t.jsxs)(n.p,{children:["Run ",(0,t.jsx)(n.code,{children:"/agents"})," in a Forge session to see your configured agents."]})]}),"\n",(0,t.jsx)(n.h3,{id:"context-management",children:"Context Management"}),"\n",(0,t.jsxs)(n.p,{children:["ZSH Support maintains conversation context across prompts. Use ",(0,t.jsx)(n.code,{children:":reset"})," to clear context when switching to a new task:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Working on database optimization\n: analyze the slow queries in @database/analytics.sql\n\n# Run shell commands for investigation\nps aux | grep postgres\nhtop -p $(pgrep postgres)\n\n# Continue the conversation - agent remembers context\n: based on what I found, the CPU usage is high, what should I check next?\n\n# Switch to a completely different task\n:reset\n\n# Start fresh - no database context carried over\n: help me set up CI/CD pipeline for this project\n"})}),"\n",(0,t.jsx)(n.p,{children:"The agent remembers previous conversations within the same session, letting you work naturally with a mix of shell commands and AI assistance."}),"\n",(0,t.jsxs)(n.h3,{id:"file-tagging-requires-fdfzf",children:["File Tagging ",(0,t.jsx)(n.em,{children:"(requires fd/fzf)"})]}),"\n",(0,t.jsxs)(n.p,{children:["Tag files in your prompts using ",(0,t.jsx)(n.code,{children:"@"})," followed by a partial filename and Tab:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:": review the changes in @package<Tab>\n: explain the logic in @src/utils/helper<Tab>\n: optimize the performance of @database/queries<Tab>\n"})}),"\n",(0,t.jsx)(n.p,{children:"When you press Tab:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"A fuzzy finder window opens"}),"\n",(0,t.jsx)(n.li,{children:"Type to filter files by name"}),"\n",(0,t.jsx)(n.li,{children:"Use arrow keys to navigate"}),"\n",(0,t.jsx)(n.li,{children:"Press Enter to select the file"}),"\n",(0,t.jsx)(n.li,{children:"The full file path is inserted into your prompt"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The fuzzy finder searches through your project files and respects your ",(0,t.jsx)(n.code,{children:".gitignore"})," automatically."]}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(n.h4,{id:"command-not-found",children:"Command Not Found"}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.code,{children:": command not found"})," appears:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Ensure you added the source line to ",(0,t.jsx)(n.code,{children:"~/.zshrc"})]}),"\n",(0,t.jsxs)(n.li,{children:["Reload your shell: ",(0,t.jsx)(n.code,{children:"source ~/.zshrc"})," or ",(0,t.jsx)(n.code,{children:"exec zsh"})]}),"\n",(0,t.jsxs)(n.li,{children:["Verify ",(0,t.jsx)(n.code,{children:"FORGEBIN"})," is set correctly: ",(0,t.jsx)(n.code,{children:"echo $FORGEBIN"})]}),"\n",(0,t.jsx)(n.li,{children:"Check the path matches your installation method (global vs npx)"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"file-tagging-doesnt-work",children:"File Tagging Doesn't Work"}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.code,{children:"@filename<Tab>"})," does nothing, fd and fzf are not installed. See ",(0,t.jsx)(n.a,{href:"#installation",children:"Step 2"})," or our ",(0,t.jsx)(n.a,{href:"/docs/fd-fzf-installation",children:"ZSH Dependencies Installation Guide"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"You can still use full file paths manually:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:": review the changes in @[src/components/Header.tsx]\n"})}),"\n",(0,t.jsx)(n.h4,{id:"syntax-highlighting-problems",children:"Syntax Highlighting Problems"}),"\n",(0,t.jsx)(n.p,{children:"If highlighting doesn't appear:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Ensure zsh-syntax-highlighting is installed"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Check if installed via package manager\nbrew list | grep zsh-syntax-highlighting # macOS\ndpkg -l | grep zsh-syntax-highlighting   # Ubuntu/Debian\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Verify correct loading order in ~/.zshrc"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Forge integration must be loaded BEFORE zsh-syntax-highlighting"}),"\n",(0,t.jsx)(n.li,{children:"zsh-syntax-highlighting must be the LAST plugin sourced"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Check if zsh-syntax-highlighting is loaded"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"echo $ZSH_HIGHLIGHT_VERSION\n"})}),"\n",(0,t.jsx)(n.p,{children:"If this returns empty, the plugin isn't loaded."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Ensure you're using ZSH (not bash)"}),": ",(0,t.jsx)(n.code,{children:"echo $SHELL"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Check that your terminal supports colors"}),": ",(0,t.jsx)(n.code,{children:"echo $TERM"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Try reloading"}),": ",(0,t.jsx)(n.code,{children:"source ~/.zshrc"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"For manual installations"}),", verify the path is correct:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ls -la /path/to/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"no-agent-has-subscribed-to-the-event",children:"No agent has subscribed to the event"}),"\n",(0,t.jsx)(n.p,{children:'If you get "agent not found" errors:'}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Check your available agents by running ",(0,t.jsx)(n.code,{children:"/agents"})," in a Forge session"]}),"\n",(0,t.jsx)(n.li,{children:"Verify agent name spelling (case-sensitive)"}),"\n",(0,t.jsxs)(n.li,{children:["Test with a basic command: ",(0,t.jsx)(n.code,{children:": list my current working directory and git status"})]}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(6540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);