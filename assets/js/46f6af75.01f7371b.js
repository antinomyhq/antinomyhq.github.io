"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4228],{1414:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"commands","title":"Built-in Commands","description":"Explore Forge\'s built-in commands and when to use them.","source":"@site/docs/commands.mdx","sourceDirName":".","slug":"/commands","permalink":"/docs/commands","draft":false,"unlisted":false,"editUrl":"https://github.com/antinomyhq/antinomyhq.github.io/tree/main/docs/commands.mdx","tags":[],"version":"current","lastUpdatedAt":1741766218000,"sidebarPosition":1,"frontMatter":{"title":"Built-in Commands","sidebar_position":1,"description":"Explore Forge\'s built-in commands and when to use them.","sidebar_label":"Built-in Commands"},"sidebar":"docs","previous":{"title":"Shell Integration","permalink":"/docs/shell-integration"},"next":{"title":"Operation Modes","permalink":"/docs/operation-modes"}}');var t=s(4848),d=s(8453);const o={title:"Built-in Commands",sidebar_position:1,description:"Explore Forge's built-in commands and when to use them.",sidebar_label:"Built-in Commands"},r="Built-in Commands",l={},c=[{value:"Available Commands",id:"available-commands",level:2},{value:"Command Details",id:"command-details",level:2},{value:"<code>/new</code>",id:"new",level:3},{value:"<code>/info</code>",id:"info",level:3},{value:"<code>/models</code>",id:"models",level:3},{value:"<code>/dump</code>",id:"dump",level:3},{value:"<code>/act</code>",id:"act",level:3},{value:"<code>/plan</code>",id:"plan",level:3},{value:"<code>/help</code>",id:"help",level:3},{value:"Best Practices",id:"best-practices",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"built-in-commands",children:"Built-in Commands"})}),"\n",(0,t.jsxs)(n.p,{children:["Forge provides a suite of built-in commands that enhance workflow efficiency and provide system control. These commands are prefixed with a forward slash (",(0,t.jsx)(n.code,{children:"/"}),") to differentiate them from standard input queries and task descriptions."]}),"\n",(0,t.jsx)(n.h2,{id:"available-commands",children:"Available Commands"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Command"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"When to Use"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"/new"})}),(0,t.jsx)(n.td,{children:"Start a new task"}),(0,t.jsx)(n.td,{children:"When you've completed your current task and want to begin a fresh conversation"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"/info"})}),(0,t.jsx)(n.td,{children:"View environment summary"}),(0,t.jsx)(n.td,{children:"When you need to check your environment configuration, logs location, or command history"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"/models"})}),(0,t.jsx)(n.td,{children:"List available AI models"}),(0,t.jsx)(n.td,{children:"When you want to see which AI models are available and their capabilities"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"/dump"})}),(0,t.jsx)(n.td,{children:"Save conversation to JSON"}),(0,t.jsx)(n.td,{children:"When you want to save the current conversation for reference or sharing"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"/act"})}),(0,t.jsx)(n.td,{children:"Switch to ACT mode"}),(0,t.jsx)(n.td,{children:"When you want Forge to execute commands and implement changes (this is the default mode)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"/plan"})}),(0,t.jsx)(n.td,{children:"Switch to PLAN mode"}),(0,t.jsx)(n.td,{children:"When you want Forge to analyze and plan but not modify files"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"/help"})}),(0,t.jsx)(n.td,{children:"Display help information"}),(0,t.jsx)(n.td,{children:"When you need a reminder of available commands"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"command-details",children:"Command Details"}),"\n",(0,t.jsx)(n.h3,{id:"new",children:(0,t.jsx)(n.code,{children:"/new"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"/new"})," command clears the current conversation context and starts a fresh task. This is useful when you've completed your current task and want to begin something entirely different."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"/new\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"When to use"}),": Use this when switching between unrelated tasks to ensure a clean context."]}),"\n",(0,t.jsx)(n.h3,{id:"info",children:(0,t.jsx)(n.code,{children:"/info"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"/info"})," command displays information about your environment, including system details, logs location, and command history."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"/info\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"When to use"}),": Use this when you need to troubleshoot, find log files, or review your recent commands."]}),"\n",(0,t.jsx)(n.h3,{id:"models",children:(0,t.jsx)(n.code,{children:"/models"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"/models"})," command lists all available AI models with their capabilities and context limitations."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"/models\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example output"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Available models:\n- anthropic/claude-3.7-sonnet (Context: 200K tokens)\n- anthropic/claude-3.5-haiku (Context: 200K tokens)\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"When to use"}),": Use this when you want to check which models are available or understand their capabilities."]}),"\n",(0,t.jsx)(n.h3,{id:"dump",children:(0,t.jsx)(n.code,{children:"/dump"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"/dump"})," command saves the current conversation in JSON format to a file for future reference."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"/dump\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"When to use"}),": Use this when you want to save a particularly useful conversation for documentation, sharing, or reference."]}),"\n",(0,t.jsx)(n.h3,{id:"act",children:(0,t.jsx)(n.code,{children:"/act"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"/act"})," command switches Forge to ACT mode, where it can execute commands and implement changes."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"/act\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"When to use"}),": This is the default mode. Use this command to switch back to ACT mode if you were previously in PLAN mode."]}),"\n",(0,t.jsx)(n.h3,{id:"plan",children:(0,t.jsx)(n.code,{children:"/plan"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"/plan"})," command switches Forge to PLAN mode, where it analyzes and suggests changes without modifying files."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"/plan\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"When to use"}),": Use this when you want Forge to analyze your codebase and suggest changes without actually implementing them. This is useful for understanding what would happen before making changes."]}),"\n",(0,t.jsx)(n.h3,{id:"help",children:(0,t.jsx)(n.code,{children:"/help"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"/help"})," command displays information about available commands and their usage."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"/help\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"When to use"}),": Use this when you need a quick reminder of the available commands and their functions."]}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Start Fresh"}),": Use ",(0,t.jsx)(n.code,{children:"/new"})," when switching between unrelated tasks to ensure the context is clean."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Preserve Knowledge"}),": Use ",(0,t.jsx)(n.code,{children:"/dump"})," to save valuable conversations that you might want to reference later."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Understand Before Acting"}),": Use ",(0,t.jsx)(n.code,{children:"/plan"})," to see what actions Forge would take before allowing it to make changes."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Check System Status"}),": Use ",(0,t.jsx)(n.code,{children:"/info"})," when something isn't working as expected to diagnose potential issues."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Select Appropriate Models"}),": Use ",(0,t.jsx)(n.code,{children:"/models"})," to understand which model is best for your specific task."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var i=s(6540);const t={},d=i.createContext(t);function o(e){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);