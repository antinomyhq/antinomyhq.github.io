"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5072],{56388:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"mcp-integration","title":"Model Context Protocol (MCP) Integration","description":"Learn how to configure and use MCP servers to extend Forge with external tools and services.","source":"@site/docs/mcp-integration.mdx","sourceDirName":".","slug":"/mcp-integration","permalink":"/docs/mcp-integration","draft":false,"unlisted":false,"editUrl":"https://github.com/Forge Code/antinomyhq.github.io/tree/main/docs/mcp-integration.mdx","tags":[],"version":"current","lastUpdatedAt":1751007807000,"sidebarPosition":8,"frontMatter":{"title":"Model Context Protocol (MCP) Integration","sidebar_position":8,"description":"Learn how to configure and use MCP servers to extend Forge with external tools and services.","sidebar_label":"MCP Integration"},"sidebar":"docs","previous":{"title":"Environment Configuration","permalink":"/docs/environment-configuration"},"next":{"title":"Context Compaction","permalink":"/docs/context-compaction"}}');var i=r(74848),o=r(28453);const t={title:"Model Context Protocol (MCP) Integration",sidebar_position:8,description:"Learn how to configure and use MCP servers to extend Forge with external tools and services.",sidebar_label:"MCP Integration"},c="Model Context Protocol (MCP) Integration",a={},l=[{value:"What is MCP?",id:"what-is-mcp",level:2},{value:"MCP Configuration",id:"mcp-configuration",level:2},{value:"Using CLI Commands",id:"using-cli-commands",level:3},{value:"Manual Configuration",id:"manual-configuration",level:3},{value:"Configuration Structure",id:"configuration-structure",level:3},{value:"Command-based Server",id:"command-based-server",level:4},{value:"URL-based Server",id:"url-based-server",level:4},{value:"Configuration Precedence",id:"configuration-precedence",level:3},{value:"Example Use Cases",id:"example-use-cases",level:2},{value:"Web Browser Automation",id:"web-browser-automation",level:3},{value:"External API Interactions",id:"external-api-interactions",level:3},{value:"Tool Integration",id:"tool-integration",level:3},{value:"Custom Service Connections",id:"custom-service-connections",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Security Considerations",id:"security-considerations",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"model-context-protocol-mcp-integration",children:"Model Context Protocol (MCP) Integration"})}),"\n",(0,i.jsx)(n.p,{children:"The Model Context Protocol (MCP) feature allows AI agents to communicate with external tools and services, significantly extending Forge's capabilities. This implementation follows Anthropic's Model Context Protocol design, enabling seamless integration with various external systems and services."}),"\n",(0,i.jsx)(n.h2,{id:"what-is-mcp",children:"What is MCP?"}),"\n",(0,i.jsx)(n.p,{children:"MCP provides a standardized way for AI agents to interact with external tools, APIs, and services. Through MCP, Forge can:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Access external APIs and web services"}),"\n",(0,i.jsx)(n.li,{children:"Integrate with specialized tools and applications"}),"\n",(0,i.jsx)(n.li,{children:"Perform web browser automation"}),"\n",(0,i.jsx)(n.li,{children:"Connect to databases and data sources"}),"\n",(0,i.jsx)(n.li,{children:"Interact with custom service endpoints"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"mcp-configuration",children:"MCP Configuration"}),"\n",(0,i.jsx)(n.h3,{id:"using-cli-commands",children:"Using CLI Commands"}),"\n",(0,i.jsx)(n.p,{children:"Forge provides several CLI commands to manage MCP server configurations:"}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsxs)("summary",{children:[(0,i.jsx)("code",{children:"forge mcp list"})," - List all configured MCP servers"]}),(0,i.jsx)(n.p,{children:"Displays all currently configured MCP servers with their basic information."}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Usage:"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"forge mcp list\n"})}),(0,i.jsx)(n.p,{children:"This command shows:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Server names"}),"\n",(0,i.jsx)(n.li,{children:"Connection status"}),"\n",(0,i.jsx)(n.li,{children:"Basic configuration details"}),"\n"]})]}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsxs)("summary",{children:[(0,i.jsx)("code",{children:"forge mcp add"})," - Add a new MCP server interactively"]}),(0,i.jsx)(n.p,{children:"Launches an interactive setup process to add a new MCP server configuration."}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Usage:"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"forge mcp add <server_name> <command/url>\n"})})]}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsxs)("summary",{children:[(0,i.jsx)("code",{children:"forge mcp add-json"})," - Add a server using JSON configuration"]}),(0,i.jsx)(n.p,{children:"Allows you to add an MCP server by providing a complete JSON configuration."}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Usage:"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"forge mcp add-json <your_json_config_for_mcp>\n"})})]}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsxs)("summary",{children:[(0,i.jsx)("code",{children:"forge mcp get"})," - Get detailed server information"]}),(0,i.jsx)(n.p,{children:"Retrieves detailed information about a specific MCP server configuration."}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Usage:"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"forge mcp get <server_name>\n"})}),(0,i.jsx)(n.p,{children:"This displays:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Command/URL used by the mcp server"}),"\n"]})]}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsxs)("summary",{children:[(0,i.jsx)("code",{children:"forge mcp remove"})," - Remove an MCP server"]}),(0,i.jsx)(n.p,{children:"Removes an MCP server configuration from your setup."}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Usage:"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"forge mcp remove <server_name>\n"})}),(0,i.jsx)(n.p,{children:"This will permanently remove the server configuration."})]}),"\n",(0,i.jsx)(n.h3,{id:"manual-configuration",children:"Manual Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["You can also manually create MCP configurations by creating a ",(0,i.jsx)(n.code,{children:".mcp.json"})," file with the following structure:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "mcpServers": {\n    "browser_automation": {\n      "command": "npx",\n      "args": ["@modelcontextprotocol/server-browser"],\n      "env": {\n        "BROWSER_EXECUTABLE": "/usr/bin/chromium-browser"\n      }\n    },\n    "api_service": {\n      "command": "python",\n      "args": ["-m", "mcp_server", "--port", "3001"],\n      "env": {\n        "API_KEY": "your_api_key_here",\n        "DEBUG": "true"\n      }\n    },\n    "webhook_server": {\n      "url": "http://localhost:3000/events"\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"configuration-structure",children:"Configuration Structure"}),"\n",(0,i.jsx)(n.p,{children:"Each MCP server configuration can use one of two formats:"}),"\n",(0,i.jsx)(n.h4,{id:"command-based-server",children:"Command-based Server"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "server_name": {\n    "command": "command_to_execute",\n    "args": ["arg1", "arg2", "arg3"],\n    "env": {\n      "ENV_VAR": "value",\n      "ANOTHER_VAR": "another_value"\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"url-based-server",children:"URL-based Server"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "server_name": {\n    "url": "http://localhost:3000/events"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"configuration-precedence",children:"Configuration Precedence"}),"\n",(0,i.jsx)(n.p,{children:"MCP configurations are read from two locations in the following order of precedence:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Local configuration"})," (project-specific): ",(0,i.jsx)(n.code,{children:".mcp.json"})," in your current project directory"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"User configuration"})," (user-specific): Global configuration in your user directory"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Local configurations take precedence over user configurations, allowing you to have project-specific MCP setups while maintaining global defaults."}),"\n",(0,i.jsx)(n.h2,{id:"example-use-cases",children:"Example Use Cases"}),"\n",(0,i.jsx)(n.h3,{id:"web-browser-automation",children:"Web Browser Automation"}),"\n",(0,i.jsx)(n.p,{children:"Configure an MCP server for browser automation to enable Forge to interact with web pages:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "mcpServers": {\n    "browser": {\n      "command": "npx",\n      "args": ["@modelcontextprotocol/server-browser"],\n      "env": {\n        "HEADLESS": "false",\n        "VIEWPORT_WIDTH": "1920",\n        "VIEWPORT_HEIGHT": "1080"\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Use cases:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Automated testing of web applications"}),"\n",(0,i.jsx)(n.li,{children:"Data scraping and extraction"}),"\n",(0,i.jsx)(n.li,{children:"Form filling and submission"}),"\n",(0,i.jsx)(n.li,{children:"UI interaction testing"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"external-api-interactions",children:"External API Interactions"}),"\n",(0,i.jsx)(n.p,{children:"Set up MCP servers to interact with external APIs:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "mcpServers": {\n    "weather_api": {\n      "command": "python",\n      "args": ["-m", "weather_mcp_server"],\n      "env": {\n        "WEATHER_API_KEY": "your_api_key",\n        "DEFAULT_LOCATION": "San Francisco"\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Use cases:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Fetching real-time data"}),"\n",(0,i.jsx)(n.li,{children:"Integrating with third-party services"}),"\n",(0,i.jsx)(n.li,{children:"Accessing specialized APIs"}),"\n",(0,i.jsx)(n.li,{children:"Data synchronization"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"tool-integration",children:"Tool Integration"}),"\n",(0,i.jsx)(n.p,{children:"Connect specialized development tools through MCP:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "mcpServers": {\n    "database_tools": {\n      "command": "node",\n      "args": ["database-mcp-server.js"],\n      "env": {\n        "DB_CONNECTION_STRING": "postgresql://user:pass@localhost:5432/db",\n        "QUERY_TIMEOUT": "30000"\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Use cases:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Database query execution"}),"\n",(0,i.jsx)(n.li,{children:"Schema management"}),"\n",(0,i.jsx)(n.li,{children:"Data migration tools"}),"\n",(0,i.jsx)(n.li,{children:"Performance monitoring"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"custom-service-connections",children:"Custom Service Connections"}),"\n",(0,i.jsx)(n.p,{children:"Create connections to custom internal services:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "mcpServers": {\n    "internal_api": {\n      "url": "http://internal-service.company.com/mcp",\n      "env": {\n        "AUTH_TOKEN": "internal_service_token"\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Use cases:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Internal tool integration"}),"\n",(0,i.jsx)(n.li,{children:"Custom workflow automation"}),"\n",(0,i.jsx)(n.li,{children:"Proprietary system access"}),"\n",(0,i.jsx)(n.li,{children:"Enterprise service connections"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsx)(n.h3,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Environment Variables"}),": Store sensitive information like API keys in environment variables rather than in configuration files"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Access Control"}),": Limit MCP server permissions to only what's necessary"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Network Security"}),": Use secure connections (HTTPS) for URL-based servers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Credential Management"}),": Rotate API keys and tokens regularly"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Server Connection Failures:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Verify server URLs and ports are correct"}),"\n",(0,i.jsx)(n.li,{children:"Check network connectivity"}),"\n",(0,i.jsx)(n.li,{children:"Ensure required environment variables are set"}),"\n",(0,i.jsx)(n.li,{children:"Validate authentication credentials"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Command Execution Errors:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Verify command paths and arguments"}),"\n",(0,i.jsx)(n.li,{children:"Check file permissions"}),"\n",(0,i.jsx)(n.li,{children:"Ensure required dependencies are installed"}),"\n",(0,i.jsx)(n.li,{children:"Review environment variable configurations"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Configuration Problems:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Validate JSON syntax in ",(0,i.jsx)(n.code,{children:".mcp.json"})," files"]}),"\n",(0,i.jsx)(n.li,{children:"Check configuration file locations"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>c});var s=r(96540);const i={},o=s.createContext(i);function t(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);