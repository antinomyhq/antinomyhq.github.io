"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9054],{9431:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>n,toc:()=>d});var n=a(9380),i=a(4848),r=a(8453),s=a(7617);const o={slug:"simple-is-not-easy",title:"Simple Over Easy: Architectural Constraints for Maintainable AI-Generated Code",description:"Discover how applying Rich Hickey's 'Simple Made Easy' principles can solve the 'AI 90/10 problem', leading to more maintainable and reviewable AI-generated code by constraining architectural choices.",hide_table_of_contents:!1},l=void 0,c={authorsImageUrls:[]},d=[];function h(e){const t={admonition:"admonition",blockquote:"blockquote",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"TL;DR"}),': AI agents can generate code that passes tests and looks familiar, but the last 10% of understanding, review, and maintenance becomes impossible. By applying Rich Hickey\'s principles from his talk "Simple Made Easy", Our team constrained our architecture to leave only one way to solve each problem, making AI-generated code easy to review and maintain.']}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Two months ago, YouTube's recommendation algorithm served me Rich Hickey's 2011 QCon talk ",(0,i.jsx)(s.h,{href:"https://www.youtube.com/watch?v=SxdOUGdseq4",children:'"Simple Made Easy"'}),"."]}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsxs)(t.p,{children:["If you haven't seen it, I highly recommend watching it. It's a 13-year-old talk that feels more relevant today than ever.\n",(0,i.jsx)(s.h,{href:"https://www.youtube.com/watch?v=SxdOUGdseq4",children:'"Simple Made Easy"'})]})}),"\n",(0,i.jsxs)(t.p,{children:["We've all experienced this with AI coding agents, what I now call ",(0,i.jsx)(t.strong,{children:"the AI 90/10 problem"}),": Agents can generate syntactically correct, test passing code that gets us 90% of the way there incredibly fast, but that last 10%, the part where humans have to understand, review, and maintain the code, becomes impossible."]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},7617:(e,t,a)=>{a.d(t,{A:()=>r,h:()=>s});a(6540);var n=a(8774),i=a(4848);const r=({href:e,children:t,className:a="",external:r=!1,onClick:s})=>{const o=`text-tailCall-lightMode---primary-600 dark:text-tailCall-darkMode---primary-400 hover:text-tailCall-lightMode---primary-700 dark:hover:text-tailCall-darkMode---primary-300 transition-colors duration-300 ${a}`.trim();return r||e?.startsWith("http")?(0,i.jsx)("a",{href:e,className:o,target:"_blank",rel:"noopener noreferrer",onClick:s,children:t}):(0,i.jsx)(n.A,{to:e,className:o,onClick:s,children:t})},s=r},8453:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>o});var n=a(6540);const i={},r=n.createContext(i);function s(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(r.Provider,{value:t},e.children)}},9380:e=>{e.exports=JSON.parse('{"permalink":"/blog/simple-is-not-easy","source":"@site/blog/simple-made-easy.md","title":"Simple Over Easy: Architectural Constraints for Maintainable AI-Generated Code","description":"Discover how applying Rich Hickey\'s \'Simple Made Easy\' principles can solve the \'AI 90/10 problem\', leading to more maintainable and reviewable AI-generated code by constraining architectural choices.","date":"2025-06-27T01:42:35.000Z","tags":[],"readingTime":10.01,"hasTruncateMarker":true,"authors":[],"frontMatter":{"slug":"simple-is-not-easy","title":"Simple Over Easy: Architectural Constraints for Maintainable AI-Generated Code","description":"Discover how applying Rich Hickey\'s \'Simple Made Easy\' principles can solve the \'AI 90/10 problem\', leading to more maintainable and reviewable AI-generated code by constraining architectural choices.","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"MCP 2025-06-18 Spec Update: AI Security, Structured Output, and User Elicitation for LLMs","permalink":"/blog/mcp-spec-updates"},"nextItem":{"title":"MCP Security Crisis: Uncovering Vulnerabilities and Attack Vectors - Part 1","permalink":"/blog/prevent-attacks-on-mcp"}}')}}]);