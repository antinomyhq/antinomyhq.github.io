"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4133],{28066:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"environment-configuration","title":"Environment Configuration","description":"Learn about environment variables and configuration options for Forge.","source":"@site/docs/environment-configuration.mdx","sourceDirName":".","slug":"/environment-configuration","permalink":"/docs/environment-configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/Forge Code/antinomyhq.github.io/tree/main/docs/environment-configuration.mdx","tags":[],"version":"current","lastUpdatedAt":1741766218000,"sidebarPosition":3,"frontMatter":{"title":"Environment Configuration","sidebar_position":3,"description":"Learn about environment variables and configuration options for Forge.","sidebar_label":"Environment Configuration"},"sidebar":"docs","previous":{"title":"Workflow Configuration","permalink":"/docs/workflow-config"},"next":{"title":"MCP Integration","permalink":"/docs/mcp-integration"}}');var o=i(74848),t=i(28453);const s={title:"Environment Configuration",sidebar_position:3,description:"Learn about environment variables and configuration options for Forge.",sidebar_label:"Environment Configuration"},d="Environment Configuration",c={},l=[{value:"Configuration Methods",id:"configuration-methods",level:2},{value:"API Provider Configuration",id:"api-provider-configuration",level:2},{value:"API Keys",id:"api-keys",level:3},{value:"Custom Provider URLs",id:"custom-provider-urls",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"environment-configuration",children:"Environment Configuration"})}),"\n",(0,o.jsx)(n.p,{children:"Forge can be configured through environment variables to control its behavior, API connections, and model preferences. This page describes the available configuration options and how to use them."}),"\n",(0,o.jsx)(n.h2,{id:"configuration-methods",children:"Configuration Methods"}),"\n",(0,o.jsx)(n.p,{children:"You can configure Forge using either:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Environment Variables"}),": Set directly in your shell profile (",(0,o.jsx)(n.code,{children:".bashrc"}),", ",(0,o.jsx)(n.code,{children:".zshrc"}),", etc.)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsxs)(n.strong,{children:[(0,o.jsx)(n.code,{children:".env"})," File"]}),": Create a file named ",(0,o.jsx)(n.code,{children:".env"})," in your home directory"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:".env"})," file method is recommended for most users as it keeps your configuration in one place and prevents exposing API keys in your shell history."]}),"\n",(0,o.jsx)(n.h2,{id:"api-provider-configuration",children:"API Provider Configuration"}),"\n",(0,o.jsx)(n.h3,{id:"api-keys",children:"API Keys"}),"\n",(0,o.jsx)(n.p,{children:"Forge supports multiple AI providers and checks for API keys in the following priority order:"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Environment Variable"}),(0,o.jsx)(n.th,{children:"Provider"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"FORGE_KEY"})}),(0,o.jsx)(n.td,{children:"Antinomy's provider (OpenAI-compatible)"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"OPENROUTER_API_KEY"})}),(0,o.jsx)(n.td,{children:"Open Router (aggregates multiple models)"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"OPENAI_API_KEY"})}),(0,o.jsx)(n.td,{children:"Official OpenAI"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"ANTHROPIC_API_KEY"})}),(0,o.jsx)(n.td,{children:"Official Anthropic"})]})]})]}),"\n",(0,o.jsxs)(n.p,{children:["Example configuration in ",(0,o.jsx)(n.code,{children:".env"})," file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# For Open Router (recommended, provides access to multiple models)\nOPENROUTER_API_KEY=your_openrouter_key_here\n\n# For official OpenAI\n# OPENAI_API_KEY=your_openai_key_here\n\n# For official Anthropic\n# ANTHROPIC_API_KEY=your_anthropic_key_here\n\n# For Antinomy's provider\n# FORGE_KEY=your_forge_key_here\n"})}),"\n",(0,o.jsx)(n.h3,{id:"custom-provider-urls",children:"Custom Provider URLs"}),"\n",(0,o.jsx)(n.p,{children:"For OpenAI-compatible providers (including Open Router), you can customize the API endpoint URL:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Custom OpenAI-compatible provider\nOPENAI_API_KEY=your_api_key_here\nOPENAI_URL=https://your-custom-provider.com/v1\n\n# Or with Open Router but custom endpoint\nOPENROUTER_API_KEY=your_openrouter_key_here\nOPENAI_URL=https://alternative-openrouter-endpoint.com/v1\n"})}),"\n",(0,o.jsx)(n.p,{children:"This is useful for:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Self-hosted models with OpenAI-compatible APIs"}),"\n",(0,o.jsx)(n.li,{children:"Enterprise OpenAI deployments"}),"\n",(0,o.jsx)(n.li,{children:"Proxy services or API gateways"}),"\n",(0,o.jsx)(n.li,{children:"Regional API endpoints"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>d});var r=i(96540);const o={},t=r.createContext(o);function s(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);