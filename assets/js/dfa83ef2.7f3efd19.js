"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5338],{4303:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"shell-commands","title":"Shell Commands","description":"Execute native shell commands directly from Forge CLI.","source":"@site/docs/shell-commands.mdx","sourceDirName":".","slug":"/shell-commands","permalink":"/docs/shell-commands","draft":false,"unlisted":false,"editUrl":"https://github.com/Forge Code/antinomyhq.github.io/tree/main/docs/shell-commands.mdx","tags":[],"version":"current","lastUpdatedAt":1753402569000,"sidebarPosition":2,"frontMatter":{"title":"Shell Commands","sidebar_position":2,"description":"Execute native shell commands directly from Forge CLI.","sidebar_label":"Shell Commands"},"sidebar":"docs","previous":{"title":"Built-in Commands","permalink":"/docs/commands"},"next":{"title":"Auto-Complete","permalink":"/docs/auto-complete"}}');var t=s(4848),i=s(8453),r=s(5646);const l={title:"Shell Commands",sidebar_position:2,description:"Execute native shell commands directly from Forge CLI.",sidebar_label:"Shell Commands"},a="Shell Commands",c={},d=[{value:"Usage",id:"usage",level:2},{value:"Gotchas",id:"gotchas",level:2},{value:"Shell Compatibility",id:"shell-compatibility",level:3},{value:"Stateless Execution",id:"stateless-execution",level:3},{value:"Directory Changes Don&#39;t Persist",id:"directory-changes-dont-persist",level:3},{value:"Platform Considerations",id:"platform-considerations",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"shell-commands",children:"Shell Commands"})}),"\n",(0,t.jsxs)(n.p,{children:["Forge allows you to execute native shell commands directly from the CLI by prefixing them with ",(0,t.jsx)(n.code,{children:"!"})," without switching context. These commands are executed immediately without being processed by the AI, providing a fast way to run system operations without leaving the Forge environment."]}),"\n",(0,t.jsx)(r.A,{variant:"information",children:(0,t.jsx)("span",{children:(0,t.jsxs)(n.p,{children:["Commands that start with ",(0,t.jsx)(n.code,{children:"!"})," bypass the AI and are executed directly in your shell. This ensures immediate execution\nand allows you to seamlessly integrate shell operations into your Forge workflow."]})})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:["To execute a shell command, prefix it with ",(0,t.jsx)(n.code,{children:"!"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"! ls -la\n! git status\n! npm install\n! python script.py\n! mkdir new-directory\n"})}),"\n",(0,t.jsx)(n.p,{children:"These commands will be executed in your current working directory, and their output will be displayed in the console."}),"\n",(0,t.jsx)(n.h2,{id:"gotchas",children:"Gotchas"}),"\n",(0,t.jsx)(n.h3,{id:"shell-compatibility",children:"Shell Compatibility"}),"\n",(0,t.jsx)(n.p,{children:"ZSH and PowerShell don't work out of the box with Forge's shell command execution. Forge uses a restricted bash environment for security and consistency across platforms. If you're using ZSH or PowerShell as your default shell, some shell-specific features, aliases, or functions will not be available when executing commands through Forge."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Workaround"}),": Use standard POSIX-compliant commands or explicitly call your preferred shell:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'! zsh -c "your-zsh-specific-command"\n! powershell -c "Your-PowerShell-Command"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"stateless-execution",children:"Stateless Execution"}),"\n",(0,t.jsx)(n.p,{children:"All commands are executed fresh without carrying forward information between runs. Each shell command starts with a clean environment, meaning:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Environment variables set in one command won't persist to the next"}),"\n",(0,t.jsx)(n.li,{children:"Background processes started in one command won't be accessible in subsequent commands"}),"\n",(0,t.jsx)(n.li,{children:"Shell history and session state are not maintained"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example of what won't work"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'! export MY_VAR="hello"\n! echo $MY_VAR # This will be empty\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Workaround"}),": Combine related commands in a single execution:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'! export MY_VAR="hello" && echo $MY_VAR\n'})}),"\n",(0,t.jsx)(n.h3,{id:"directory-changes-dont-persist",children:"Directory Changes Don't Persist"}),"\n",(0,t.jsxs)(n.p,{children:["Changing the directory will only be applicable until the command executes and will have no bearing on Forge's working directory. The ",(0,t.jsx)(n.code,{children:"cd"})," command or any directory navigation within a shell command is temporary and isolated to that specific command execution."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"! cd /tmp\n! pwd # This will still show your original working directory\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Workaround"}),": To permanently change Forge's working directory, you need to exit Forge, navigate to your preferred directory, and start Forge again in that location. Alternatively, use absolute paths or combine directory changes with your commands:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"! cd /tmp && ls -la                  # Execute ls in /tmp\n! cd /path/to/project && npm install # Install dependencies in specific directory\n"})}),"\n",(0,t.jsxs)(r.A,{variant:"tip",children:[(0,t.jsx)("p",{children:(0,t.jsx)("strong",{children:"Purpose of Shell Commands"})}),(0,t.jsx)("span",{children:(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"!"})," shortcut is designed for quick execution of individual commands without context switching, not as a\nreplacement for your preferred shell environment. For complex shell workflows, interactive sessions, or\nshell-specific features, continue using your native ZSH, PowerShell, or bash terminal alongside Forge."]})})]}),"\n",(0,t.jsx)(n.h2,{id:"platform-considerations",children:"Platform Considerations"}),"\n",(0,t.jsx)(n.p,{children:"The available shell commands depend on your operating system:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"macOS/Linux"}),": Full bash command support"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Windows"}),": Command Prompt commands"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Make sure to use commands appropriate for your platform when sharing Forge sessions or documentation."})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},5646:(e,n,s)=>{s.d(n,{A:()=>t});s(6540);var o=s(4848);const t=({children:e,variant:n="default"})=>(0,o.jsx)("div",{className:`text-justify text-title-small font-normal h-[100%] ${{thin:"rounded-[40px] max-w-[600px] flex flex-col gap-4 max-h-[50vh] overflow-scroll",default:"",docsCard:"py-8 px-10 rounded-[12px] !font-[275] text-tailCall-lightMode---neutral-600 dark:text-white dark:bg-[#181818] bg-tailCall-darkMode---neutral-300"}[n]}`,children:e})},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var o=s(6540);const t={},i=o.createContext(t);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);